<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>netcoreapp2.0</TargetFramework>
    <RootNamespace>Geodesy</RootNamespace>
    <Description>A library with basic geodesic algorithms to compute distances, directions and coordinate transformations.</Description>
    <FileVersion>2.0.1.0</FileVersion>
    <AssemblyVersion>2.0.1.0</AssemblyVersion>
    <Company>Pfeifers-Software</Company>
    <Product>Geodesic</Product>
    <Version>2.0.1</Version>
    <Authors>Jürgen Pfeifer</Authors>
    <Copyright>Copyright © 2014-2018 Jürgen Pfeifer. All rights reserved.</Copyright>
    <DefineConstants>TRACE;CORE</DefineConstants>
    <PackageReleaseNotes>This is a C# class library containing some very basic geodesic algorithms.
It is based on work by Mike Gavaghan and has been enhanced by me to cover 
also some variants of Mercators projection. I cover Spherical, Elliptical 
and UTM projections. Based on UTM I implement an algorithm to put a finer 
grain mesh over the mapped area of the earth to be able to classify a 
geo-location by a discrete globally unique mesh number. This is done in 
order to facilitacte the application of some discrete algorithms -
especially in the area of machine learning - on geo locations.</PackageReleaseNotes>
    <PackageLicenseUrl>https://github.com/juergenpf/Geodesy/blob/master/License.md</PackageLicenseUrl>
    <PackageProjectUrl>https://github.com/juergenpf/Geodesy</PackageProjectUrl>
    <RepositoryUrl>https://github.com/juergenpf/Geodesy.git</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageTags>Geodesy Maps Geocaching Machinelearning ML</PackageTags>
    <PackageId>Geodesy</PackageId>
    <AssemblyName>Geodesy</AssemblyName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <DocumentationFile>bin\Release\netcoreapp2.0\Geodesy.Core.xml</DocumentationFile>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include="..\Geodesy\Angle.cs" Link="Angle.cs" />
    <Compile Include="..\Geodesy\Ellipsoid.cs" Link="Ellipsoid.cs" />
    <Compile Include="..\Geodesy\EllipticalMercatorProjection.cs" Link="EllipticalMercatorProjection.cs" />
    <Compile Include="..\Geodesy\EuclidianCoordinate.cs" Link="EuclidianCoordinate.cs" />
    <Compile Include="..\Geodesy\Extensions\ExtendDouble.cs" Link="Extensions\ExtendDouble.cs" />
    <Compile Include="..\Geodesy\GeodesyException.cs" Link="GeodesyException.cs" />
    <Compile Include="..\Geodesy\GeodeticCalculator.cs" Link="GeodeticCalculator.cs" />
    <Compile Include="..\Geodesy\GeodeticCurve.cs" Link="GeodeticCurve.cs" />
    <Compile Include="..\Geodesy\GeodeticMeasurement.cs" Link="GeodeticMeasurement.cs" />
    <Compile Include="..\Geodesy\GlobalCoordinates.cs" Link="GlobalCoordinates.cs" />
    <Compile Include="..\Geodesy\GlobalMercatorProjection.cs" Link="GlobalMercatorProjection.cs" />
    <Compile Include="..\Geodesy\GlobalMesh.cs" Link="GlobalMesh.cs" />
    <Compile Include="..\Geodesy\GlobalPosition.cs" Link="GlobalPosition.cs" />
    <Compile Include="..\Geodesy\MercatorProjection.cs" Link="MercatorProjection.cs" />
    <Compile Include="..\Geodesy\SphericalMercatorProjection.cs" Link="SphericalMercatorProjection.cs" />
    <Compile Include="..\Geodesy\UtmCoordinate.cs" Link="UtmCoordinate.cs" />
    <Compile Include="..\Geodesy\UtmGrid.cs" Link="UtmGrid.cs" />
    <Compile Include="..\Geodesy\UtmProjection.cs" Link="UtmProjection.cs" />
  </ItemGroup>
  <ItemGroup>
    <Folder Include="Extensions\" />
  </ItemGroup>
  <ItemGroup>
    <Compile Update="Properties\Resources.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Update="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>
  <Target Name="PostBuild" AfterTargets="PostBuildEvent">
    <Exec Command="PUSHD &quot;$(SolutionDir)&quot;&#xA;  &#xD;&#xA;CALL .\Scripts\copynuget  &quot;$(ConfigurationName)&quot; &quot;$(TargetDir)&quot; &quot;$(TargetName)&quot; &quot;$(TargetExt)&quot; &quot;netcoreapp2.0&quot;&#xA;&#xD;&#xA;POPD&#xA;" />
  </Target>
</Project>