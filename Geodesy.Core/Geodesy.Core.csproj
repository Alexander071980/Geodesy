<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>netcoreapp2.0</TargetFramework>
    <RootNamespace>Geodesy</RootNamespace>
    <Description>A library with basic geodesic algorithms to compute distances, directions and coordinate transformations.</Description>
    <FileVersion>2.0.0.0</FileVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <Company>Pfeifers-Software</Company>
    <Product>Geodesic</Product>
    <Version>2.0.0</Version>
    <Authors>Jürgen Pfeifer</Authors>
    <Copyright>Copyright © 2014-2018 Jürgen Pfeifer. All rights reserved.</Copyright>
    <DefineConstants>TRACE;CORE</DefineConstants>
    <PackageId>Geodesy</PackageId>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <AssemblyName>Geodesy</AssemblyName>
    <PackageReleaseNotes>This is a C# class library containing some very basic geodesic algorithms.
It is based on work by Mike Gavaghan and has been enhanced by me to cover 
also some variants of Mercators projection. I cover Spherical, Elliptical 
and UTM projections. Based on UTM I implement an algorithm to put a finer 
grain mesh over the mapped area of the earth to be able to classify a 
geo-location by a discrete globally unique mesh number. This is done in 
order to facilitacte the application of some discrete algorithms -
especially in the area of machine learning - on geo locations.

Version 2 is a release that targets .NET Core 2.0 only and is thus usable in all .NET environments that allow loading of .NET Core 2.0 packages.</PackageReleaseNotes>
    <PackageLicenseUrl>https://github.com/juergenpf/Geodesy/blob/master/License.md</PackageLicenseUrl>
    <PackageProjectUrl>https://github.com/juergenpf/Geodesy</PackageProjectUrl>
    <RepositoryUrl>https://github.com/juergenpf/Geodesy.git</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageTags>Geodesy Maps Geocaching Machinelearning ML</PackageTags>
  </PropertyGroup>
  <ItemGroup>
    <Folder Include="Extensions\" />
  </ItemGroup>
  <ItemGroup>
    <Compile Update="Properties\Resources.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Update="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>
</Project>